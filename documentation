# Документация для простой PHP CMS

## Введение

Этот документ представляет собой руководство по использованию простой PHP системы управления контентом (CMS). Эта CMS позволяет вам управлять новостными статьями, комментариями пользователей и основными настройками через веб-интерфейс. Она включает в себя аутентификацию пользователей, создание статей, редактирование, удаление, модерацию комментариев и основные параметры конфигурации.

## Установка

1.  **Требования к серверу:** Убедитесь, что у вас есть веб-сервер с PHP и включенными следующими расширениями:
    *   `session`
    *   `openssl`
2.  **Загрузка файлов:** Загрузите все предоставленные файлы (`auth.php`, `comments.php`, `edit.php`, `create.php`, `index.php`, `settings.php`, каталоги `elements`, `data` и `style`) на ваш веб-сервер в каталог, доступный через ваш веб-браузер.
3.  **Переименование файлов:**  **Уже выполнено.** Файлы должны быть загружены и переименованы без расширения `.txt`.
4.  **Начальные учетные данные для входа:** Начальные учетные данные для входа устанавливаются в скрипте `auth.php` и хранятся в зашифрованном виде в `data/authdetails.txt`. Чтобы найти учетные данные по умолчанию, вам нужно будет проанализировать процесс шифрования и, возможно, расшифровать содержимое `data/authdetails.txt`, если учетные данные по умолчанию когда-либо были установлены программно и сохранены там. **Однако, в предоставленном виде, в `auth.php` нет жестко закодированного имени пользователя/пароля по умолчанию. Вам нужно будет установить их самостоятельно через страницу настроек после первого успешного входа в систему, используя *любой* логин и пароль.** При первой попытке входа в систему, введенный логин и пароль будут зашифрованы и сохранены в `data/authdetails.txt`, фактически устанавливая ваши начальные учетные данные.

## Вход в систему и аутентификация (`auth.php`)

1.  **Переход на страницу входа:** Откройте `auth.php` в своем веб-браузере (например, `http://yourdomain.com/auth.php`).
2.  **Форма входа:** Вы увидите форму входа с полями для "логин" и "пароль".
3.  **Введите учетные данные:** Введите имя пользователя и пароль. Для самого первого входа вы можете использовать любое имя пользователя и пароль, которые хотите установить в качестве начальных учетных данных администратора.
4.  **Отправьте форму:** Нажмите кнопку "войти".
5.  **Процесс аутентификации:**
    *   Скрипт шифрует введенный логин и пароль с использованием шифрования AES-256-CBC. Ключ для шифрования получается из конкатенации логина и пароля.
    *   Он сравнивает зашифрованные данные с содержимым файла `data/authdetails.txt`.
    *   Если зашифрованные данные совпадают, аутентификация считается успешной.
6.  **Успешный вход:** После успешного входа в систему вы будете перенаправлены на панель управления (`index.php`). Сессия запускается, и ваше имя пользователя сохраняется в переменной `$_SESSION['user']`.
7.  **Неудачный вход:** Если учетные данные неверны, вы увидите сообщение об ошибке: "неправильный логин или пароль!".

## Панель управления (`index.php`)

Панель управления (`index.php`) - это главная страница после успешного входа в систему. На ней отображается список новостных статей.

*   **Список статей:** На странице перечислены все статьи из файла `data/news.txt`.
    *   **Заголовок статьи:** Заголовок каждой статьи отображается в виде ссылки. Нажатие на заголовок переведет вас на страницу редактирования статьи (`edit.php`) для этой конкретной статьи. Если заголовок пуст, будет отображаться "<пусто>".
    *   **Описание статьи:** Краткое описание статьи (маленький текст) показано под заголовком.
    *   **Дата статьи:** Отображается дата создания статьи.
*   **Шапка:** Шапка включает имя пользователя, вошедшего в систему, и ссылку "выйти".

## Создание статей (`create.php`)

1.  **Переход на страницу создания:** Откройте `create.php` в своем веб-браузере (например, `http://yourdomain.com/create.php`).
2.  **Форма создания статьи:** Вы увидите форму для создания новой статьи.
    *   **Заголовок:** Поле ввода для заголовка статьи.
    *   **Раздел:** Выпадающее меню для выбора раздела для статьи. Разделы загружаются из `data/sections.txt`. Вы можете управлять разделами на странице настроек (`settings.php`).
    *   **Описание:** Поле ввода для краткого описания статьи.
    *   **Текст:** Базовый HTML-редактор (`div` с атрибутом `contenteditable`), для написания содержания статьи.
    *   **Дата:** Поле ввода даты, предварительно заполненное текущей датой.
    *   **Выберите приватность статьи:** Радиокнопки для установки приватности статьи:
        *   **Приватный:** Доступно только для авторизованных пользователей (функциональность не полностью реализована в предоставленном коде, требует дальнейшей разработки в логике отображения на стороне клиента).
        *   **По ссылке:** Доступно любому, у кого есть прямая ссылка (функциональность не полностью реализована).
        *   **Публичный (по умолчанию):** Общедоступно.
    *   **Комметарии:** Радиокнопки для управления комментариями:
        *   **включить комментарии (по умолчанию):** Разрешает комментарии к статье.
        *   **отключить комментарии:** Запрещает комментарии к статье.
3.  **Заполните форму:** Введите данные статьи.
4.  **Отправьте форму:** Нажмите кнопку "создать".
5.  **Процесс создания статьи:**
    *   Скрипт получает данные из формы.
    *   Он кодирует base64 заголовок, текст, описание и раздел.
    *   Он генерирует уникальный ID для статьи.
    *   Он форматирует данные статьи и добавляет их новой строкой в начало файла `data/news.txt`.
6.  **Перенаправление:** После успешного создания вы будете перенаправлены обратно на страницу создания. (Примечание: В предоставленном коде нет явного сообщения об успехе или перенаправления после создания; возможно, вам захочется добавить сообщение об успехе и перенаправление на `index.php` или `edit.php` для вновь созданной статьи для лучшего пользовательского опыта.)

## Редактирование статей (`edit.php`)

1.  **Переход на страницу редактирования:** Нажмите на заголовок статьи на панели управления (`index.php`) или откройте `edit.php?id=[article_id]` непосредственно в браузере, заменив `[article_id]` на ID статьи, которую вы хотите отредактировать.
2.  **Форма редактирования статьи:** Страница редактирования отображает форму, предварительно заполненную данными выбранной статьи. Поля формы такие же, как и в форме создания статьи (`create.php`).
3.  **Измените данные статьи:** Отредактируйте заголовок статьи, описание, раздел, текст, дату, приватность или настройки комментариев по мере необходимости.
4.  **Отправьте изменения:** Нажмите кнопку "редактировать".
5.  **Процесс обновления статьи:**
    *   Скрипт получает обновленные данные из формы.
    *   Он кодирует base64 обновленный заголовок, текст, описание и раздел.
    *   Он заменяет исходную строку в `data/news.txt`, соответствующую ID статьи, на новые обновленные данные.
6.  **Сообщение об успехе:** После успешного редактирования вы должны увидеть сообщение: "успешно сохраненно".
7.  **Удаление статьи:**
    *   На странице редактирования вы также найдете ссылку "удалить".
    *   Нажатие на "удалить" отобразит форму подтверждения с вопросом "хотите удалить?".
    *   Нажмите "удалить" еще раз в форме подтверждения, чтобы удалить статью.
    *   Нажмите "Отменить", чтобы вернуться на страницу редактирования без удаления.
    *   После подтверждения строка статьи удаляется из `data/news.txt`, и вы будете перенаправлены на `index.php`.

## Управление комментариями (`comments.php`)

1.  **Переход на страницу комментариев:** Откройте `comments.php` в своем веб-браузере (например, `http://yourdomain.com/comments.php`).
2.  **Интерфейс управления комментариями:** Страница комментариев предоставляет инструменты для управления комментариями пользователей.
    *   **Узнать зашифрофрованное email/IP-адрес:**
        *   Поле ввода: "IP-адрес или почта".
        *   Кнопка: "узнать".
        *   Функциональность: Хеширует введенный IP-адрес или электронную почту с использованием SHA256 после кодирования base64 и HTML-сущностей и отображает полученный хеш. Это, вероятно, используется для поиска зашифрованного представления для блокировки или разблокировки.
    *   **Разблокировка пользователя:**
        *   Поле ввода: "зашифрованный IP-адрес или почта".
        *   Кнопка: "раблокировать пользователя".
        *   Функциональность: Удаляет введенный зашифрованный IP-адрес или электронную почту из файла `data/blacklistcom.txt`, эффективно разблокируя пользователя от возможности комментировать.
    *   **Просмотр комментариев:**
        *   Выпадающее меню: Выбирает заголовок новостной статьи из `data/news.txt`.
        *   Кнопка отправки: Отображает комментарии, связанные с выбранной статьей.
        *   Функциональность: Фильтрует и отображает комментарии из `data/comments.txt`, относящиеся к выбранной статье. Если статья не выбрана, показывает все комментарии.
    *   **Список комментариев:** Ниже форм отображается список комментариев.
        *   **Карточка комментария:** Каждый комментарий отображается в "карточке".
            *   **написал:** Отображает имя комментатора (декодированное из base64).
            *   **Текст комментария:** Отображает текст комментария (декодированный из base64).
            *   **Время комментария:** Отображает временную метку комментария (декодированную из base64).
            *   **Кнопка "удалить":** Удаляет комментарий. При нажатии отображается запрос на подтверждение.
            *   **Кнопка "заблокировать отравителя":** Блокирует IP-адрес или электронную почту комментатора. При нажатии отображается запрос на подтверждение и варианты блокировки либо IP, либо электронной почты.

## Настройки (`settings.php`)

1.  **Переход на страницу настроек:** Откройте `settings.php` в своем веб-браузере (например, `http://yourdomain.com/settings.php`).
2.  **Формы настроек:** Страница настроек содержит формы для настройки различных аспектов CMS.
    *   **смена логина и пароля:**
        *   **логин:** Поле ввода для нового имени пользователя. Предварительно заполнено текущим именем пользователя.
        *   **пароль:** Поле ввода для нового пароля.
        *   Кнопка: "сохранить".
        *   Функциональность: Обновляет учетные данные для входа. Шифрует новый логин и пароль и сохраняет их в `data/authdetails.txt`.
    *   **разделы:**
        *   Поле ввода: "разделы, пример: AI,телефоны,ноутбуки". Инструкции указывают, что разделы должны быть разделены запятыми. Предварительно заполнено текущими разделами из `data/sections.txt`.
        *   Кнопка: "сохранить".
        *   Функциональность: Обновляет список разделов в `data/sections.txt`.
    *   **максимум количество статей на одной странице (только число):**
        *   Поле ввода: Числовое поле ввода для максимального количества статей на странице. Предварительно заполнено текущим значением из `data/pagination.txt`.
        *   Кнопка: "сохранить".
        *   Функциональность: Обновляет настройку пагинации в `data/pagination.txt`. Выполняется базовая проверка, чтобы убедиться, что введенное значение является числом больше 0.9.

## Структура файлов и хранение данных

*   **`auth.php`**: Страница аутентификации/входа.
*   **`comments.php`**: Страница управления комментариями.
*   **`edit.php`**: Страница редактирования статей.
*   **`create.php`**: Страница создания статей.
*   **`index.php`**: Панель управления/Страница списка статей.
*   **`settings.php`**: Страница настроек.
*   **`elements/`**: Каталог, содержащий HTML-элементы:
    *   **`heading.html`**: HTML-шапка для страниц администратора.
    *   **`editornews.html`**: HTML-структура для текстового редактора.
*   **`data/`**: Каталог, содержащий файлы данных:
    *   **`authdetails.txt`**: Хранит зашифрованные учетные данные для входа.
    *   **`comments.txt`**: Хранит данные комментариев в формате: `id|article_id|name|email|ip|comment_text|timestamp|formatted_timestamp`.
    *   **`news.txt`**: Хранит данные новостных статей в формате: `id|subject|text|date|smalltext|privacy,comments_status|sections`.
    *   **`sections.txt`**: Хранит разделенные запятыми разделы статей.
    *   **`pagination.txt`**: Хранит количество статей на странице.
    *   **`blacklistcom.txt`**: Хранит заблокированные IP-адреса/адреса электронной почты (по одному на строке).
*   **`style/`**: Каталог, содержащий CSS-таблицы стилей:
    *   `adaptation.css`, `auth.css`, `body.css`, `create.css`, `edit.css`, `editor.css`, `header.css`, `style.css`.

## Заметки по безопасности

*   **Получение ключа шифрования:** Скрипт использует комбинацию логина и пароля в качестве ключа шифрования для хранения учетных данных. Это **не является безопасной практикой**. Если злоумышленник знает имя пользователя, он имеет частичное знание ключа шифрования, что облегчает атаки грубой силой. Более безопасным подходом было бы использование надежного, случайно сгенерированного и безопасно хранящегося ключа шифрования, отдельного от учетных данных пользователя.
*   **Санитарная обработка ввода:** Скрипт использует `base64_encode` и `htmlentities` в некоторых местах. Однако крайне важно обеспечить надлежащую санитарную обработку и проверку ввода для предотвращения различных уязвимостей, таких как межсайтовый скриптинг (XSS) и SQL-инъекции (хотя SQL-инъекции здесь менее актуальны, поскольку скрипт использует плоские файлы, но аналогичные уязвимости инъекций все еще могут существовать при операциях с файлами, если ввод не обрабатывается должным образом).
*   **Безопасность сессий:** Хотя сессии используются, убедитесь в правильной конфигурации сессий в `php.ini` или `.htaccess` для повышения безопасности (например, `session.cookie_httponly = 1`, `session.cookie_secure = 1`).
*   **Хранение данных:** Хранение данных в плоских файлах просто для небольших приложений, но может стать неэффективным и труднее управляемым по мере роста данных. Для более крупных развертываний рассмотрите возможность использования базы данных.
*   **Базовый редактор:** Предоставленный HTML-редактор очень простой. Рассмотрите возможность интеграции более надежного и многофункционального WYSIWYG-редактора для лучшего создания контента и безопасности (поскольку некоторые базовые редакторы могут быть уязвимы для XSS, если не обрабатываются должным образом).
*   **Приватность и видимость по ссылке:** Настройки приватности "private" и "link" упомянуты, но их фактическая реализация в контроле доступа на стороне клиента не очевидна в предоставленном коде. Эти функции могут потребовать дальнейшей разработки для полной функциональности.

## Устранение неполадок

*   **Проблемы со входом:**
    *   **Неверные учетные данные:** Перепроверьте свое имя пользователя и пароль. Помните, что начальный вход устанавливает учетные данные.
    *   **Разрешения на файлы:** Убедитесь, что веб-сервер имеет права записи в каталог `data/` и его файлы, особенно `data/authdetails.txt`, чтобы он мог сохранять учетные данные для входа при первом входе в систему и при их изменении в настройках.
*   **Сбои при создании/редактировании статей:**
    *   **Разрешения на файлы:** Проверьте разрешения на запись для `data/news.txt`.
    *   **Ошибки PHP:** Проверьте журналы ошибок вашего веб-сервера на наличие ошибок PHP, которые могут возникнуть во время файловых операций или обработки данных.
*   **Проблемы с комментариями:**
    *   **Разрешения на файлы:** Убедитесь в наличии разрешений на запись для `data/comments.txt` и `data/blacklistcom.txt`.
*   **Настройки не сохраняются:**
    *   **Разрешения на файлы:** Проверьте разрешения на запись для `data/sections.txt` и `data/pagination.txt`.
    *   **Проверка ввода:** Если настройки пагинации не сохраняются, убедитесь, что вы вводите допустимое число больше 0.9.

## Заключение

Эта документация дает базовое понимание того, как использовать предоставленную PHP CMS. Она позволяет управлять новостными статьями и комментариями с основными административными функциями. Не забудьте учесть замечания по безопасности и потенциальные улучшения для создания более надежной и безопасной системы, особенно если она используется в рабочей среде. Для более функционального и масштабируемого решения рассмотрите возможность использования более устоявшейся CMS или фреймворка.
